model Thread {
  id            String          @id @default(uuid())
  description   String          @db.Text
  createAt      DateTime        @default(now())
  updateAt      DateTime        @updatedAt
  authorId      String
  author        User            @relation("WriterThread", fields: [authorId], references: [id])
  commentThread CommentThread[]
  likeThread    LikeThread[]
  saveThread    SaveThread[]
  viewThread    ViewThread[]
}

model ViewThread {
  id       String  @id @default(uuid())
  threadId String?
  thread   Thread? @relation(fields: [threadId], references: [id])
  userId   String?
  viewBy   User?   @relation(fields: [userId], references: [id])
}

model LikeThread {
  id       String  @id @default(uuid())
  threadId String?
  userId   String?
  thread   Thread? @relation(fields: [threadId], references: [id])
  likeBy   User?   @relation("LikeThread", fields: [userId], references: [id])
}

model SaveThread {
  id       String  @id @default(uuid())
  threadId String?
  userId   String?
  thread   Thread? @relation(fields: [threadId], references: [id])
  saveBy   User?   @relation("SaveThread", fields: [userId], references: [id])
}

model CommentThread {
  id          String  @id @default(uuid())
  description String  @db.Text
  thread      Thread? @relation(fields: [threadId], references: [id])
  threadId    String?
  commentBy   User?   @relation("CommentThread", fields: [userId], references: [id])
  userId      String?
}
